{
    "print亮黄": "PrintBrightYellow",
    "print亮绿": "PrintBrightGreen",
    "print亮红": "PrintBrightRed",
    "print红": "PrintRed",
    "print绿": "PrintGreen",
    "print黄": "PrintYellow",
    "print蓝": "PrintBlue",
    "print紫": "PrintPurple",
    "print靛": "PrintIndigo",
    "print亮蓝": "PrintBrightBlue",
    "print亮紫": "PrintBrightPurple",
    "print亮靛": "PrintBrightIndigo",
    "读文章写摘要": "ReadArticleWriteSummary",
    "批量生成函数注释": "BatchGenerateFunctionComments",
    "生成函数注释": "GenerateFunctionComments",
    "解析项目本身": "ParseProjectItself",
    "解析项目源代码": "ParseProjectSourceCode",
    "解析一个Python项目": "ParsePythonProject",
    "解析一个C项目的头文件": "ParseCProjectHeaderFiles",
    "解析一个C项目": "ParseCProject",
    "解析一个Golang项目": "ParseGolangProject",
    "解析一个Java项目": "ParseJavaProject",
    "解析一个前端项目": "ParseFrontendProject",
    "高阶功能模板函数": "HighOrderFunctionTemplateFunctions",
    "高级功能函数模板": "AdvancedFunctionTemplate",
    "全项目切换英文": "SwitchToEnglishForTheWholeProject",
    "代码重写为全英文_多线程": "RewriteCodeToEnglish_MultiThreaded",
    "Latex英文润色": "EnglishProofreadingForLatex",
    "Latex全文润色": "FullTextProofreadingForLatex",
    "同时问询": "SimultaneousInquiry",
    "询问多个大语言模型": "InquiryMultipleLargeLanguageModels",
    "解析一个Lua项目": "ParsingLuaProject",
    "解析一个CSharp项目": "ParsingCSharpProject",
    "总结word文档": "SummarizingWordDocuments",
    "解析ipynb文件": "ParsingIpynbFiles",
    "解析JupyterNotebook": "ParsingJupyterNotebook",
    "对话历史存档": "ConversationHistoryArchive",
    "载入对话历史存档": "LoadConversationHistoryArchive",
    "删除所有本地对话历史记录": "DeleteAllLocalConversationHistoryRecords",
    "Markdown英译中": "TranslateMarkdownFromEnglishToChinese",
    "批量Markdown翻译": "BatchTranslateMarkdown",
    "批量总结PDF文档": "BatchSummarizePDFDocuments",
    "批量总结PDF文档pdfminer": "BatchSummarizePDFDocumentsUsingPdfminer",
    "批量翻译PDF文档": "BatchTranslatePDFDocuments",
    "批量翻译PDF文档_多线程": "BatchTranslatePDFDocuments_MultiThreaded",
    "谷歌检索小助手": "GoogleSearchAssistant",
    "理解PDF文档内容标准文件输入": "UnderstandPdfDocumentContentStandardFileInput",
    "理解PDF文档内容": "UnderstandPdfDocumentContent",
    "Latex中文润色": "LatexChineseProofreading",
    "Latex中译英": "LatexChineseToEnglish",
    "Latex全文翻译": "LatexFullTextTranslation",
    "Latex英译中": "LatexEnglishToChinese",
    "Markdown中译英": "MarkdownChineseToEnglish",
    "下载arxiv论文并翻译摘要": "DownloadArxivPaperAndTranslateAbstract",
    "下载arxiv论文翻译摘要": "DownloadArxivPaperTranslateAbstract",
    "连接网络回答问题": "ConnectToNetworkToAnswerQuestions",
    "联网的ChatGPT": "ChatGPTConnectedToNetwork",
    "解析任意code项目": "ParseAnyCodeProject",
    "同时问询_指定模型": "InquireSimultaneously_SpecifiedModel",
    "图片生成": "ImageGeneration",
    "test_解析ipynb文件": "Test_ParseIpynbFile",
    "把字符太少的块清除为回车": "ClearBlocksWithTooFewCharactersToNewline",
    "清理多余的空行": "CleanUpExcessBlankLines",
    "合并小写开头的段落块": "MergeLowercaseStartingParagraphBlocks",
    "多文件润色": "ProofreadMultipleFiles",
    "多文件翻译": "TranslateMultipleFiles",
    "解析docx": "ParseDocx",
    "解析PDF": "ParsePDF",
    "解析Paper": "ParsePaper",
    "ipynb解释": "IpynbExplanation",
    "解析源代码新": "ParsingSourceCodeNew",
    "避免代理网络产生意外污染": "Avoid unexpected pollution caused by proxy networks",
    "无": "None",
    "查询代理的地理位置": "Query the geographic location of the proxy",
    "返回的结果是": "The returned result is",
    "代理配置": "Proxy configuration",
    "代理所在地": "Location of the proxy",
    "未知": "Unknown",
    "IP查询频率受限": "IP query frequency is limited",
    "代理所在地查询超时": "Timeout when querying the location of the proxy",
    "代理可能无效": "Proxy may be invalid",
    "一键更新协议": "One-click protocol update",
    "备份和下载": "Backup and download",
    "覆盖和重启": "Overwrite and restart",
    "由于您没有设置config_private.py私密配置": "Since you have not set the config_private.py private configuration",
    "现将您的现有配置移动至config_private.py以防止配置丢失": "Now move your existing configuration to config_private.py to prevent configuration loss",
    "另外您可以随时在history子文件夹下找回旧版的程序": "In addition, you can always retrieve the old version of the program in the history subfolder",
    "代码已经更新": "Code has been updated",
    "即将更新pip包依赖……": "Will update pip package dependencies soon...",
    "pip包依赖安装出现问题": "Problem occurred during installation of pip package dependencies",
    "需要手动安装新增的依赖库": "Need to manually install the newly added dependency library",
    "然后在用常规的": "Then use the regular",
    "的方式启动": "way to start",
    "更新完成": "Update completed",
    "您可以随时在history子文件夹下找回旧版的程序": "You can always retrieve the old version of the program in the history subfolder",
    "5s之后重启": "Restart after 5 seconds",
    "假如重启失败": "If restart fails",
    "您可能需要手动安装新增的依赖库": "You may need to manually install new dependencies",
    "查询版本和用户意见": "Check version and user feedback",
    "新功能": "New features",
    "新版本可用": "New version available",
    "新版本": "New version",
    "当前版本": "Current version",
    "Github更新地址": "Github update address",
    "是否一键更新代码": "Update code with one click?",
    "Y+回车=确认": "Y+Enter=Confirm",
    "输入其他/无输入+回车=不更新": "Enter other/No input+Enter=No update",
    "更新失败": "Update failed",
    "自动更新程序": "Automatic update program",
    "已禁用": "Disabled",
    "正在执行一些模块的预热": "Some modules are being preheated",
    "模块预热": "Module preheating",
    "例如": "For example",
    "此key无效": "This key is invalid",
    "可同时填写多个API-KEY": "Multiple API-KEYs can be filled in at the same time",
    "用英文逗号分割": "Separated by commas",
    "改为True应用代理": "Change to True to apply proxy",
    "如果直接在海外服务器部署": "If deployed directly on overseas servers",
    "此处不修改": "Do not modify here",
    "填写格式是": "Format for filling in is",
    "协议": "Protocol",
    "地址": "Address",
    "端口": "Port",
    "填写之前不要忘记把USE_PROXY改成True": "Don't forget to change USE_PROXY to True before filling in",
    "常见协议无非socks5h/http": "Common protocols are nothing but socks5h/http",
    "例如 v2**y 和 ss* 的默认本地协议是socks5h": "For example, the default local protocol for v2**y and ss* is socks5h",
    "而cl**h 的默认本地协议是http": "While the default local protocol for cl**h is http",
    "懂的都懂": "Those who understand, understand",
    "不懂就填localhost或者127.0.0.1肯定错不了": "If you don't understand, just fill in localhost or 127.0.0.1 and you won't go wrong",
    "localhost意思是代理软件安装在本机上": "localhost means that the proxy software is installed on the local machine",
    "在代理软件的设置里找": "Look for it in the settings of the proxy software",
    "虽然不同的代理软件界面不一样": "Although the interface of different proxy software is different",
    "但端口号都应该在最显眼的位置上": "But the port number should be in the most prominent position",
    "代理网络的地址": "Address of the proxy network",
    "打开你的*学*网软件查看代理的协议": "Open your *learning* software to view the proxy protocol",
    "、地址": "and address",
    "和端口": "and port",
    "多线程函数插件中": "In the multi-threaded function plugin",
    "默认允许多少路线程同时访问OpenAI": "How many threads are allowed to access OpenAI at the same time by default",
    "Free trial users的限制是每分钟3次": "The limit for free trial users is 3 times per minute",
    "Pay-as-you-go users的限制是每分钟3500次": "The limit for Pay-as-you-go users is 3500 times per minute",
    "一言以蔽之": "In short",
    "免费用户填3": "Free users should fill in 3",
    "设置用户名和密码": "Set username and password",
    "相关功能不稳定": "Related functions are unstable",
    "与gradio版本和网络都相关": "Related to gradio version and network",
    "如果本地使用不建议加这个": "Not recommended to add this for local use",
    "重新URL重新定向": "Redirect URL",
    "实现更换API_URL的作用": "Realize the function of changing API_URL",
    "常规情况下": "Under normal circumstances",
    "不要修改!!": "Do not modify!!",
    "高危设置！通过修改此设置": "High-risk setting! By modifying this setting",
    "您将把您的API-KEY和对话隐私完全暴露给您设定的中间人！": "You will completely expose your API-KEY and conversation privacy to the middleman you set!",
    "如果需要在二级路径下运行": "If you need to run under the second-level path",
    "需要配合修改main.py才能生效!": "Need to be modified in conjunction with main.py to take effect!",
    "如果需要使用newbing": "If you need to use newbing",
    "把newbing的长长的cookie放到这里": "Put the long cookie of newbing here",
    "sk-此处填API密钥": "sk-Fill in API key here",
    "默认按钮颜色是 secondary": "The default button color is secondary",
    "前言": "Preface",
    "后语": "Postscript",
    "按钮颜色": "Button color",
    "预处理": "Preprocessing",
    "清除换行符": "Remove line breaks",
    "英语学术润色": "English academic polishing",
    "中文学术润色": "Chinese academic polishing",
    "查找语法错误": "Find syntax errors",
    "中译英": "Chinese to English translation",
    "学术中英互译": "Academic Chinese-English Translation",
    "英译中": "English to Chinese translation",
    "找图片": "Find image",
    "解释代码": "Explain code",
    "作为一名中文学术论文写作改进助理": "As a Chinese academic paper writing improvement assistant",
    "你的任务是改进所提供文本的拼写、语法、清晰、简洁和整体可读性": "Your task is to improve the spelling, grammar, clarity, conciseness and overall readability of the provided text",
    "同时分解长句": "Also, break down long sentences",
    "减少重复": "Reduce repetition",
    "并提供改进建议": "And provide improvement suggestions",
    "请只提供文本的更正版本": "Please only provide corrected versions of the text",
    "避免包括解释": "Avoid including explanations",
    "请编辑以下文本": "Please edit the following text",
    "翻译成地道的中文": "Translate into authentic Chinese",
    "我需要你找一张网络图片": "I need you to find a web image",
    "使用Unsplash API": "Use Unsplash API",
    "英语关键词": "English keywords",
    "获取图片URL": "Get image URL",
    "然后请使用Markdown格式封装": "Then please wrap it in Markdown format",
    "并且不要有反斜线": "And do not use backslashes",
    "不要用代码块": "Do not use code blocks",
    "现在": "Now",
    "请按以下描述给我发送图片": "Please send me the image following the description below",
    "请解释以下代码": "Please explain the following code",
    "HotReload 的意思是热更新": "HotReload means hot update",
    "修改函数插件后": "After modifying the function plugin",
    "不需要重启程序": "No need to restart the program",
    "代码直接生效": "The code takes effect directly",
    "第一组插件": "First group of plugins",
    "调用时": "When calling",
    "唤起高级参数输入区": "Invoke the advanced parameter input area",
    "默认False": "Default is False",
    "高级参数输入区的显示提示": "Display prompt in the advanced parameter input area",
    "加入下拉菜单中": "Add to the drop-down menu",
    "修改函数插件代码后": "After modifying the function plugin code",
    "第二组插件": "Second group of plugins",
    "经过充分测试": "Fully tested",
    "第三组插件": "Third group of plugins",
    "尚未充分测试的函数插件": "Function plugins that have not been fully tested yet",
    "放在这里": "Put it here",
    "第n组插件": "Nth group of plugins",
    "解析整个Python项目": "Parse the entire Python project",
    "先上传存档或输入路径": "Upload archive or enter path first",
    "请谨慎操作": "Please operate with caution",
    "测试功能": "Test function",
    "解析Jupyter Notebook文件": "Parse Jupyter Notebook files",
    "批量总结Word文档": "Batch summarize Word documents",
    "解析整个C++项目头文件": "Parse the entire C++ project header file",
    "解析整个C++项目": "Parse the entire C++ project",
    "解析整个Go项目": "Parse the entire Go project",
    "解析整个Java项目": "Parse the entire Java project",
    "解析整个前端项目": "Parse the entire front-end project",
    "css等": "CSS, etc.",
    "解析整个Lua项目": "Parse the entire Lua project",
    "解析整个CSharp项目": "Parse the entire C# project",
    "读Tex论文写摘要": "Read Tex paper and write abstract",
    "Markdown/Readme英译中": "Translate Markdown/Readme from English to Chinese",
    "保存当前的对话": "Save the current conversation",
    "多线程Demo": "Multithreading demo",
    "解析此项目本身": "Parse this project itself",
    "源码自译解": "Translate the source code",
    "老旧的Demo": "Old demo",
    "把本项目源代码切换成全英文": "Switch the source code of this project to English",
    "插件demo": "Plugin demo",
    "历史上的今天": "Today in history",
    "若输入0": "If 0 is entered",
    "则不解析notebook中的Markdown块": "Do not parse Markdown blocks in the notebook",
    "多线程": "Multithreading",
    "询问多个GPT模型": "Inquire multiple GPT models",
    "谷歌学术检索助手": "Google Scholar search assistant",
    "输入谷歌学术搜索页url": "Enter the URL of Google Scholar search page",
    "模仿ChatPDF": "Imitate ChatPDF",
    "英文Latex项目全文润色": "English Latex project full text proofreading",
    "输入路径或上传压缩包": "Input path or upload compressed package",
    "中文Latex项目全文润色": "Chinese Latex project full text proofreading",
    "Latex项目全文中译英": "Latex project full text translation from Chinese to English",
    "Latex项目全文英译中": "Latex project full text translation from English to Chinese",
    "批量MarkdownChineseToEnglish": "Batch Markdown Chinese to English",
    "一键DownloadArxivPaperAndTranslateAbstract": "One-click Download Arxiv Paper and Translate Abstract",
    "先在input输入编号": "Enter the number in input first",
    "如1812.10695": "e.g. 1812.10695",
    "先输入问题": "Enter the question first",
    "再点击按钮": "Then click the button",
    "需要访问谷歌": "Access to Google is required",
    "手动指定和筛选源代码文件类型": "Manually specify and filter the source code file type",
    "输入时用逗号隔开": "Separate with commas when entering",
    "*代表通配符": "* stands for wildcard",
    "加了^代表不匹配": "Adding ^ means not matching",
    "不输入代表全部匹配": "Not entering means matching all",
    "手动指定询问哪些模型": "Manually specify which models to ask",
    "支持任意数量的llm接口": "Support any number of llm interfaces",
    "用&符号分隔": "Separate with & symbol",
    "例如chatglm&gpt-3.5-turbo&api2d-gpt-4": "e.g. chatglm&gpt-3.5-turbo&api2d-gpt-4",
    "先切换模型到openai或api2d": "Switch the model to openai or api2d first",
    "在这里输入分辨率": "Enter the resolution here",
    "如256x256": "e.g. 256x256",
    "默认": "Default",
    "建议您复制一个config_private.py放自己的秘密": "We suggest you to copy a config_private.py file to keep your secrets, such as API and proxy URLs, from being accidentally uploaded to Github and seen by others.",
    "如API和代理网址": "Such as API and proxy URLs",
    "避免不小心传github被别人看到": "Avoid being accidentally uploaded to Github and seen by others",
    "如果WEB_PORT是-1": "If WEB_PORT is -1",
    "则随机选取WEB端口": "then a random port will be selected for WEB",
    "问询记录": "Inquiry record",
    "python 版本建议3.9+": "Python version recommended 3.9+",
    "越新越好": "The newer the better",
    "一些普通功能模块": "Some common functional modules",
    "高级函数插件": "Advanced function plugins",
    "处理markdown文本格式的转变": "Transformation of markdown text format",
    "做一些外观色彩上的调整": "Make some adjustments in appearance and color",
    "代理与自动更新": "Proxy and automatic update",
    "功能区显示开关与功能区的互动": "Interaction between display switch and function area",
    "整理反复出现的控件句柄组合": "Organize repeated control handle combinations",
    "提交按钮、重置按钮": "Submit button, reset button",
    "基础功能区的回调函数注册": "Registration of callback functions in basic function area",
    "文件上传区": "File upload area",
    "接收文件后与chatbot的互动": "Interaction with chatbot after receiving files",
    "函数插件-固定按钮区": "Function plugin - fixed button area",
    "函数插件-下拉菜单与随变按钮的互动": "Interaction between dropdown menu and dynamic button in function plugin",
    "是否唤起高级插件参数区": "Whether to call the advanced plugin parameter area",
    "随变按钮的回调函数注册": "Registration of callback functions for dynamic buttons",
    "终止按钮的回调函数注册": "Callback function registration for the stop button",
    "gradio的inbrowser触发不太稳定": "In-browser triggering of gradio is not very stable",
    "回滚代码到原始的浏览器打开函数": "Roll back code to the original browser open function",
    "打开浏览器": "Open browser",
    "ChatGPT 学术优化": "ChatGPT academic optimization",
    "代码开源和更新": "Code open source and updates",
    "地址🚀": "Address 🚀",
    "感谢热情的": "Thanks to the enthusiastic",
    "开发者们❤️": "Developers ❤️",
    "所有问询记录将自动保存在本地目录./gpt_log/chat_secrets.log": "All inquiry records will be automatically saved in the local directory ./gpt_log/chat_secrets.log",
    "请注意自我隐私保护哦！": "Please pay attention to self-privacy protection!",
    "当前模型": "Current model",
    "输入区": "Input area",
    "提交": "Submit",
    "重置": "Reset",
    "停止": "Stop",
    "清除": "Clear",
    "按Enter提交": "Submit by pressing Enter",
    "按Shift+Enter换行": "Press Shift+Enter to line break",
    "基础功能区": "Basic function area",
    "函数插件区": "Function plugin area",
    "注意": "Attention",
    "以下“红颜色”标识的函数插件需从输入区读取路径作为参数": "The function plugins marked in 'red' below need to read the path from the input area as a parameter",
    "更多函数插件": "More function plugins",
    "打开插件列表": "Open plugin list",
    "高级参数输入区": "Advanced parameter input area",
    "这里是特殊函数插件的高级参数输入区": "Here is the advanced parameter input area for special function plugins",
    "请先从插件列表中选择": "Please select from the plugin list first",
    "点击展开“文件上传区”": "Click to expand the 'file upload area'",
    "上传本地文件可供红色函数插件调用": "Upload local files for red function plugins to use",
    "任何文件": "Any file",
    "但推荐上传压缩文件": "But it is recommended to upload compressed files",
    "更换模型 & SysPrompt & 交互界面布局": "Change model & SysPrompt & interactive interface layout",
    "底部输入区": "Bottom input area",
    "输入清除键": "Input clear key",
    "插件参数区": "Plugin parameter area",
    "显示/隐藏功能区": "Show/hide function area",
    "更换LLM模型/请求源": "Change LLM model/request source",
    "备选输入区": "Alternative input area",
    "输入区2": "Input area 2",
    "已重置": "Reset",
    "插件": "Plugin",
    "的高级参数说明": "Advanced parameter description for plugin",
    "没有提供高级参数功能说明": "No advanced parameter function description provided",
    "不需要高级参数": "No advanced parameters needed",
    "如果浏览器没有自动打开": "If the browser does not open automatically",
    "请复制并转到以下URL": "Please copy and go to the following URL",
    "亮色主题": "Light theme",
    "暗色主题": "Dark theme",
    "一-鿿": "One-click",
    "GPT输出格式错误": "GPT output format error",
    "稍后可能需要再试一次": "May need to try again later",
    "gradio可用颜色列表": "Gradio available color list",
    "石板色": "Slate color",
    "灰色": "Gray",
    "锌色": "Zinc color",
    "中性色": "Neutral color",
    "石头色": "Stone color",
    "红色": "Red",
    "橙色": "Orange",
    "琥珀色": "Amber",
    "黄色": "Yellow",
    "酸橙色": "Lime color",
    "绿色": "Green",
    "祖母绿": "Turquoise",
    "青蓝色": "Cyan blue",
    "青色": "Cyan",
    "天蓝色": "Sky blue",
    "蓝色": "Blue",
    "靛蓝色": "Indigo",
    "紫罗兰色": "Violet",
    "紫色": "Purple",
    "洋红色": "Magenta",
    "粉红色": "Pink",
    "玫瑰色": "Rose",
    "添加一个萌萌的看板娘": "Add a cute mascot",
    "gradio版本较旧": "Gradio version is outdated",
    "不能自定义字体和颜色": "Cannot customize font and color",
    "引入一个有cookie的chatbot": "Introduce a chatbot with cookies",
    "刷新界面": "Refresh the page",
    "稍微留一点余地": "Leave a little room",
    "否则在回复时会因余量太少出问题": "Otherwise, there will be problems with insufficient space when replying",
    "这个bug没找到触发条件": "The trigger condition for this bug has not been found",
    "暂时先这样顶一下": "Temporarily handle it this way",
    "使用 lru缓存 加快转换速度": "Use LRU cache to speed up conversion",
    "输入了已经经过转化的字符串": "Input a string that has already been converted",
    "已经被转化过": "Has already been converted",
    "不需要再次转化": "No need to convert again",
    "有$标识的公式符号": "Formula symbol with $ sign",
    "且没有代码段": "And there is no code section",
    "的标识": "Identifier of",
    "排除了以上两个情况": "Exclude the above two cases",
    "我们": "We",
    "输入部分太自由": "The input part is too free",
    "预处理一波": "Preprocess it",
    "当代码输出半截的时候": "When the code output is halfway",
    "试着补上后个": "Try to fill in the latter",
    "第三方库": "Third-party library",
    "需要预先pip install rarfile": "Need to pip install rarfile in advance",
    "此外": "In addition",
    "Windows上还需要安装winrar软件": "WinRAR software needs to be installed on Windows",
    "配置其Path环境变量": "Configure its Path environment variable",
    "需要预先pip install py7zr": "Need to pip install py7zr in advance",
    "随机负载均衡": "Random load balancing",
    "优先级1. 获取环境变量作为配置": "Priority 1. Get environment variables as configuration",
    "读取默认值作为数据类型转换的参考": "Read the default value as a reference for data type conversion",
    "优先级2. 获取config_private中的配置": "Priority 2. Get the configuration in config_private",
    "优先级3. 获取config中的配置": "Priority 3. Get the configuration in config",
    "在读取API_KEY时": "When reading API_KEY",
    "检查一下是不是忘了改config": "Check if you forgot to change the config",
    "当输入部分的token占比小于限制的3/4时": "When the token proportion of the input part is less than 3/4 of the limit",
    "裁剪时": "When trimming",
    "1. 把input的余量留出来": "1. Leave the surplus of input",
    "2. 把输出用的余量留出来": "2. Leave the surplus used for output",
    "3. 如果余量太小了": "3. If the surplus is too small",
    "直接清除历史": "Clear the history directly",
    "当输入部分的token占比": "When the token proportion of the input part",
    "限制的3/4时": "is 3/4 of the limit",
    "截断时的颗粒度": "Granularity when truncating",
    "第一部分": "First part",
    "函数插件输入输出接驳区": "Function plugin input and output docking area",
    "带Cookies的Chatbot类": "Chatbot class with cookies",
    "为实现更多强大的功能做基础": "Laying the foundation for implementing more powerful functions",
    "装饰器函数": "Decorator function",
    "用于重组输入参数": "Used to restructure input parameters",
    "改变输入参数的顺序与结构": "Change the order and structure of input parameters",
    "刷新界面用 yield from update_ui": "Refresh the interface using yield from update_ui",
    "将插件中出的所有问题显示在界面上": "Display all questions from the plugin on the interface",
    "实现插件的热更新": "Implement hot update of the plugin",
    "打印traceback": "Print traceback",
    "为了安全而隐藏绝对地址": "Hide absolute address for security reasons",
    "正常": "Normal",
    "刷新用户界面": "Refresh the user interface",
    "在传递chatbot的过程中不要将其丢弃": "Do not discard it when passing the chatbot",
    "必要时": "If necessary",
    "可用clear将其清空": "It can be cleared with clear if necessary",
    "然后用for+append循环重新赋值": "Then reassign with for+append loop",
    "捕捉函数f中的异常并封装到一个生成器中返回": "Capture exceptions in function f and encapsulate them into a generator to return",
    "并显示到聊天当中": "And display it in the chat",
    "插件调度异常": "Plugin scheduling exception",
    "异常原因": "Exception reason",
    "实验性函数调用出错": "Experimental function call error",
    "当前代理可用性": "Current proxy availability",
    "异常": "Exception",
    "将文本按照段落分隔符分割开": "Split the text into paragraphs according to the paragraph separator",
    "生成带有段落标签的HTML代码": "Generate HTML code with paragraph tags",
    "用多种方式组合": "Combine in various ways",
    "将markdown转化为好看的html": "Convert markdown to nice-looking HTML",
    "接管gradio默认的markdown处理方式": "Take over the default markdown handling of gradio",
    "处理文件的上传": "Handle file uploads",
    "自动解压": "Automatically decompress",
    "将生成的报告自动投射到文件上传区": "Automatically project the generated report to the file upload area",
    "当历史上下文过长时": "Automatically truncate when the historical context is too long",
    "自动截断": "Automatic truncation",
    "获取设置": "Get settings",
    "根据当前的模型类别": "According to the current model category",
    "抽取可用的api-key": "Extract available API keys",
    "* 此函数未来将被弃用": "* This function will be deprecated in the future",
    "不详": "Unknown",
    "将对话记录history以Markdown格式写入文件中": "Write the conversation record history to a file in Markdown format",
    "如果没有指定文件名": "If no file name is specified",
    "则使用当前时间生成文件名": "Generate a file name using the current time",
    "chatGPT分析报告": "chatGPT analysis report",
    "chatGPT 分析报告": "chatGPT analysis report",
    "以上材料已经被写入": "The above materials have been written",
    "向chatbot中添加错误信息": "Add error information to the chatbot",
    "将Markdown格式的文本转换为HTML格式": "Convert Markdown format text to HTML format",
    "如果包含数学公式": "If it contains mathematical formulas",
    "则先将公式转换为HTML格式": "Convert the formula to HTML format first",
    "解决一个mdx_math的bug": "Fix a bug in mdx_math",
    "单$包裹begin命令时多余": "Redundant when wrapping begin command with single $",
    "在gpt输出代码的中途": "In the middle of outputting code with GPT",
    "输出了前面的": "Output the front part",
    "但还没输出完后面的": "But haven't output the back part yet",
    "补上后面的": "Complete the back part",
    "GPT模型返回的回复字符串": "Reply string returned by GPT model",
    "返回一个新的字符串": "Return a new string",
    "将输出代码片段的“后面的": "Append the back part of output code snippet",
    "”补上": "to it",
    "将输入和输出解析为HTML格式": "Parse input and output as HTML format",
    "将y中最后一项的输入部分段落化": "Paragraphize the input part of the last item in y",
    "并将输出部分的Markdown和数学公式转换为HTML格式": "And convert the output part of Markdown and math formulas to HTML format",
    "返回当前系统中可用的未使用端口": "Return an available unused port in the current system",
    "需要安装pip install rarfile来解压rar文件": "Need to install pip install rarfile to extract rar files",
    "需要安装pip install py7zr来解压7z文件": "Need to install pip install py7zr to extract 7z files",
    "当文件被上传时的回调函数": "Callback function when a file is uploaded",
    "我上传了文件": "I uploaded a file",
    "请查收": "Please check",
    "收到以下文件": "Received the following files",
    "调用路径参数已自动修正到": "The call path parameter has been automatically corrected to",
    "现在您点击任意“红颜色”标识的函数插件时": "Now when you click any function plugin with a 'red' label",
    "以上文件将被作为输入参数": "The above files will be used as input parameters",
    "汇总报告如何远程获取": "How to remotely access the summary report",
    "汇总报告已经添加到右侧“文件上传区”": "The summary report has been added to the 'file upload area' on the right",
    "可能处于折叠状态": "It may be in a collapsed state",
    "检测到": "Detected",
    "个": "items",
    "您提供的api-key不满足要求": "The api-key you provided does not meet the requirements",
    "不包含任何可用于": "Does not contain any that can be used for",
    "的api-key": "api-key",
    "您可能选择了错误的模型或请求源": "You may have selected the wrong model or request source",
    "环境变量可以是": "Environment variables can be",
    "优先": "preferred",
    "也可以直接是": "or can be directly",
    "例如在windows cmd中": "For example, in windows cmd",
    "既可以写": "it can be written as",
    "也可以写": "or as",
    "尝试加载": "Attempting to load",
    "默认值": "Default value",
    "修正值": "Corrected value",
    "环境变量": "Environment variable",
    "不支持通过环境变量设置!": "Setting through environment variables is not supported!",
    "加载失败!": "Loading failed!",
    "成功读取环境变量": "Successfully read environment variables",
    "本项目现已支持OpenAI和API2D的api-key": "This project now supports api-keys for OpenAI and API2D",
    "也支持同时填写多个api-key": "It also supports filling in multiple api-keys at the same time",
    "您既可以在config.py中修改api-key": "You can modify the api-key in config.py",
    "也可以在问题输入区输入临时的api-key": "You can also enter a temporary api-key in the question input area",
    "然后回车键提交后即可生效": "After submitting with the enter key, it will take effect",
    "您的 API_KEY 是": "Your API_KEY is",
    "*** API_KEY 导入成功": "*** API_KEY imported successfully",
    "请在config文件中修改API密钥之后再运行": "Please modify the API key in the config file before running",
    "网络代理状态": "Network proxy status",
    "未配置": "Not configured",
    "无代理状态下很可能无法访问OpenAI家族的模型": "It is very likely that you cannot access OpenAI's models without a proxy",
    "建议": "Suggestion",
    "检查USE_PROXY选项是否修改": "Check if the USE_PROXY option has been modified",
    "已配置": "Configured",
    "配置信息如下": "Configuration information is as follows",
    "proxies格式错误": "Proxies format error",
    "请注意proxies选项的格式": "Please note the format of the proxies option",
    "不要遗漏括号": "Do not miss the parentheses",
    "这段代码定义了一个名为DummyWith的空上下文管理器": "This code defines an empty context manager named DummyWith",
    "它的作用是……额……就是不起作用": "Its purpose is...um...to not do anything",
    "即在代码结构不变得情况下取代其他的上下文管理器": "That is, to replace other context managers without changing the code structure",
    "上下文管理器是一种Python对象": "Context managers are a type of Python object",
    "用于与with语句一起使用": "Used in conjunction with the with statement",
    "以确保一些资源在代码块执行期间得到正确的初始化和清理": "To ensure that some resources are properly initialized and cleaned up during code block execution",
    "上下文管理器必须实现两个方法": "Context managers must implement two methods",
    "分别为 __enter__": "They are __enter__",
    "和 __exit__": "and __exit__",
    "在上下文执行开始的情况下": "At the beginning of the context execution",
    "方法会在代码块被执行前被调用": "The method is called before the code block is executed",
    "而在上下文执行结束时": "While at the end of the context execution",
    "方法则会被调用": "The method is called",
    "把gradio的运行地址更改到指定的二次路径上": "Change the running address of Gradio to the specified secondary path",
    "通过裁剪来缩短历史记录的长度": "Shorten the length of the history by trimming",
    "此函数逐渐地搜索最长的条目进行剪辑": "This function gradually searches for the longest entry to clip",
    "直到历史记录的标记数量降低到阈值以下": "Until the number of history markers is reduced to below the threshold",
    "应急食品是“原神”游戏中的角色派蒙的外号": "Emergency Food is the nickname of the character Paimon in the game Genshin Impact",
    "安全第一条": "Safety first",
    "后面两句是": "The next two sentences are",
    "亲人两行泪": "Two lines of tears for loved ones",
    "test_解析一个Cpp项目": "test_Parse a Cpp project",
    "test_联网回答问题": "test_Answer questions online",
    "这是什么": "What is this?",
    "这个文件用于函数插件的单元测试": "This file is used for unit testing of function plugins",
    "运行方法 python crazy_functions/crazy_functions_test.py": "Run the command 'python crazy_functions/crazy_functions_test.py'",
    "AutoGPT是什么": "What is AutoGPT?",
    "当前问答": "Current Q&A",
    "程序完成": "Program completed",
    "回车退出": "Press Enter to exit",
    "退出": "Exit",
    "当 输入部分的token占比 小于 全文的一半时": "When the proportion of tokens in the input part is less than half of the entire text",
    "只裁剪历史": "Trim only history",
    "用户反馈": "User feedback",
    "第一种情况": "First scenario",
    "顺利完成": "Completed smoothly",
    "第二种情况": "Second scenario",
    "Token溢出": "Token overflow",
    "选择处理": "Choose processing",
    "尝试计算比例": "Attempt to calculate ratio",
    "尽可能多地保留文本": "Retain text as much as possible",
    "返回重试": "Return and retry",
    "选择放弃": "Choose to give up",
    "放弃": "Give up",
    "第三种情况": "Third scenario",
    "其他错误": "Other errors",
    "重试几次": "Retry several times",
    "提交任务": "Submit task",
    "yield一次以刷新前端页面": "Yield once to refresh the front-end page",
    "“喂狗”": "Feed the dog",
    "看门狗": "Watchdog",
    "如果最后成功了": "If successful in the end",
    "则删除报错信息": "Delete error message",
    "读取配置文件": "Read configuration file",
    "屏蔽掉 chatglm的多线程": "Disable chatglm's multi-threading",
    "可能会导致严重卡顿": "May cause serious lag",
    "跨线程传递": "Cross-thread communication",
    "子线程任务": "Sub-thread task",
    "也许等待十几秒后": "Perhaps after waiting for more than ten seconds",
    "情况会好转": "The situation will improve",
    "开始重试": "Start retrying",
    "异步任务开始": "Asynchronous task starts",
    "更好的UI视觉效果": "Better UI visual effects",
    "每个线程都要“喂狗”": "Each thread needs to \"feed the dog\"",
    "在前端打印些好玩的东西": "Print some fun things in the front end",
    "异步任务结束": "Asynchronous task ends",
    "是否在结束时": "Whether to display the result on the interface when ending",
    "在界面上显示结果": "Display the result on the interface",
    "递归": "Recursion",
    "列表递归接龙": "List recursion chaining",
    "第1次尝试": "1st attempt",
    "将双空行": "Use double blank lines as splitting points",
    "作为切分点": "As a splitting point",
    "第2次尝试": "2nd attempt",
    "将单空行": "Use single blank lines",
    "第3次尝试": "3rd attempt",
    "将英文句号": "Use English periods",
    "这个中文的句号是故意的": "This Chinese period is intentional",
    "作为一个标识而存在": "Exists as an identifier",
    "第4次尝试": "4th attempt",
    "将中文句号": "Chinese period",
    "第5次尝试": "5th attempt",
    "没办法了": "No other way",
    "随便切一下敷衍吧": "Cut it randomly and perfunctorily",
    "Index 0 文本": "Index 0 Text",
    "Index 1 字体": "Index 1 Font",
    "Index 2 框框": "Index 2 Box",
    "是否丢弃掉 不是正文的内容": "Whether to discard non-main text content",
    "比正文字体小": "Smaller than main text font",
    "如参考文献、脚注、图注等": "Such as references, footnotes, captions, etc.",
    "小于正文的": "Less than main text",
    "时": "When",
    "判定为不是正文": "Determined as non-main text",
    "有些文章的正文部分字体大小不是100%统一的": "In some articles, the font size of the main text is not 100% consistent",
    "有肉眼不可见的小变化": "Small changes invisible to the naked eye",
    "第 1 步": "Step 1",
    "搜集初始信息": "Collect initial information",
    "获取页面上的文本信息": "Get text information on the page",
    "块元提取": "Block element extraction",
    "第 2 步": "Step 2",
    "获取正文主字体": "Get main text font",
    "第 3 步": "Step 3",
    "切分和重新整合": "Split and reassemble",
    "尝试识别段落": "Attempt to identify paragraphs",
    "单行 + 字体大": "Single line + Large font",
    "尝试识别section": "Attempt to recognize section",
    "第 4 步": "Step 4",
    "乱七八糟的后处理": "Messy post-processing",
    "清除重复的换行": "Remove duplicate line breaks",
    "换行 -": "Line break -",
    "双换行": "Double line break",
    "第 5 步": "Step 5",
    "展示分割效果": "Display segmentation effect",
    "网络的远程文件": "Remote file on the network",
    "直接给定文件": "Directly given file",
    "本地路径": "Local path",
    "递归搜索": "Recursive search",
    "请求GPT模型同时维持用户界面活跃": "Request GPT model while keeping the user interface active",
    "输入参数 Args": "Input parameter Args",
    "以_array结尾的输入变量都是列表": "Input variables ending in _array are all lists",
    "列表长度为子任务的数量": "The length of the list is the number of sub-tasks",
    "执行时": "When executing",
    "会把列表拆解": "The list will be broken down",
    "放到每个子线程中分别执行": "And executed separately in each sub-thread",
    "输入": "Input",
    "展现在报告中的输入": "Input displayed in the report",
    "借助此参数": "With the help of this parameter",
    "在汇总报告中隐藏啰嗦的真实输入": "Hide verbose real input in the summary report",
    "增强报告的可读性": "Enhance the readability of the report",
    "GPT参数": "GPT parameters",
    "浮点数": "Floating point number",
    "用户界面对话窗口句柄": "Handle of the user interface dialog window",
    "用于数据流可视化": "Used for data flow visualization",
    "历史": "History",
    "对话历史列表": "List of conversation history",
    "系统输入": "System input",
    "列表": "List",
    "用于输入给GPT的前提提示": "Prompt for input to GPT",
    "比如你是翻译官怎样怎样": "For example, if you are a translator, how to...",
    "刷新时间间隔频率": "Refresh time interval frequency",
    "建议低于1": "Suggested to be less than 1",
    "不可高于3": "Cannot be higher than 3",
    "仅仅服务于视觉效果": "Only serves for visual effects",
    "是否自动处理token溢出的情况": "Whether to automatically handle token overflow",
    "如果选择自动处理": "If selected to handle automatically",
    "则会在溢出时暴力截断": "It will be forcefully truncated when overflow occurs",
    "默认开启": "Default enabled",
    "失败时的重试次数": "Number of retries when failed",
    "输出 Returns": "Output Returns",
    "输出": "Output",
    "GPT返回的结果": "Result returned by GPT",
    "检测到程序终止": "Program termination detected",
    "警告": "Warning",
    "文本过长将进行截断": "Text will be truncated if too long",
    "Token溢出数": "Token overflow count",
    "在执行过程中遭遇问题": "Encountered a problem during execution",
    "重试中": "Retrying",
    "请稍等": "Please wait",
    "请求GPT模型的": "Requesting GPT model",
    "版": "version",
    "具备以下功能": "Features include",
    "实时在UI上反馈远程数据流": "Real-time feedback of remote data streams on UI",
    "使用线程池": "Using thread pool",
    "可调节线程池的大小避免openai的流量限制错误": "The size of the thread pool can be adjusted to avoid openai traffic limit errors",
    "处理中途中止的情况": "Handling mid-process interruptions",
    "网络等出问题时": "When there are network issues",
    "会把traceback和已经接收的数据转入输出": "Traceback and received data will be outputted",
    "每个子任务的输入": "Input for each subtask",
    "每个子任务展现在报告中的输入": "Input displayed in the report for each subtask",
    "llm_kwargs参数": "llm_kwargs parameter",
    "历史对话输入": "Historical conversation input",
    "双层列表": "Double-layer list",
    "第一层列表是子任务分解": "The first layer of the list is the decomposition of subtasks",
    "第二层列表是对话历史": "The second layer of the list is the conversation history",
    "最大线程数": "Maximum number of threads",
    "如果子任务非常多": "If there are many subtasks",
    "需要用此选项防止高频地请求openai导致错误": "Use this option to prevent frequent requests to OpenAI that may cause errors",
    "数据流的显示最后收到的多少个字符": "Display the last few characters received in the data stream",
    "是否在输入过长时": "Automatically truncate text when input is too long",
    "自动缩减文本": "Automatically shorten the text",
    "在结束时": "At the end",
    "把完整输入-输出结果显示在聊天框": "Display the complete input-output results in the chat box",
    "子任务失败时的重试次数": "Number of retries when a subtask fails",
    "每个子任务的输出汇总": "Summary of output for each subtask",
    "如果某个子任务出错": "If a subtask encounters an error",
    "response中会携带traceback报错信息": "Traceback error information will be included in the response",
    "方便调试和定位问题": "Facilitate debugging and problem locating",
    "请开始多线程操作": "Please start multi-threaded operation",
    "等待中": "Waiting",
    "执行中": "Executing",
    "已成功": "Successful",
    "截断重试": "Truncated retry",
    "线程": "Thread",
    "此线程失败前收到的回答": "Answer received by this thread before failure",
    "输入过长已放弃": "Input is too long and has been abandoned",
    "OpenAI绑定信用卡可解除频率限制": "Binding a credit card to OpenAI can remove frequency restrictions",
    "等待重试": "Waiting for retry",
    "已失败": "Failed",
    "多线程操作已经开始": "Multi-threaded operation has started",
    "完成情况": "Completion status",
    "存在一行极长的文本！": "There is an extremely long line of text!",
    "当无法用标点、空行分割时": "When punctuation and blank lines cannot be used for separation",
    "我们用最暴力的方法切割": "We use the most brutal method to cut",
    "Tiktoken未知错误": "Tiktok unknown error",
    "这个函数用于分割pdf": "This function is used to split PDF",
    "用了很多trick": "Used a lot of tricks",
    "逻辑较乱": "The logic is messy",
    "效果奇好": "The effect is very good",
    "**输入参数说明**": "**Input Parameter Description**",
    "需要读取和清理文本的pdf文件路径": "The path of the PDF file that needs to be read and cleaned",
    "**输出参数说明**": "**Output Parameter Description**",
    "清理后的文本内容字符串": "Cleaned text content string",
    "第一页清理后的文本内容列表": "List of cleaned text content on the first page",
    "**函数功能**": "**Functionality**",
    "读取pdf文件并清理其中的文本内容": "Read the PDF file and clean its text content",
    "清理规则包括": "Cleaning rules include",
    "提取所有块元的文本信息": "Extract text information from all block elements",
    "并合并为一个字符串": "And merge into one string",
    "去除短块": "Remove short blocks",
    "字符数小于100": "Character count is less than 100",
    "并替换为回车符": "And replace with a carriage return",
    "合并小写字母开头的段落块并替换为空格": "Merge paragraph blocks that start with lowercase letters and replace with spaces",
    "将每个换行符替换为两个换行符": "Replace each line break with two line breaks",
    "使每个段落之间有两个换行符分隔": "Separate each paragraph with two line breaks",
    "提取文本块主字体": "Main font of extracted text block",
    "提取字体大小是否近似相等": "Whether the font sizes of extracted text are approximately equal",
    "这个函数是用来获取指定目录下所有指定类型": "This function is used to get all files of a specified type in a specified directory",
    "如.md": "such as .md",
    "的文件": "files",
    "并且对于网络上的文件": "and for files on the internet",
    "也可以获取它": "it can also be obtained",
    "下面是对每个参数和返回值的说明": "Below are explanations for each parameter and return value",
    "参数": "Parameters",
    "路径或网址": "Path or URL",
    "表示要搜索的文件或者文件夹路径或网络上的文件": "Indicates the file or folder path to be searched or the file on the internet",
    "字符串": "String",
    "表示要搜索的文件类型": "Indicates the file type to be searched",
    "默认是.md": "default is .md",
    "返回值": "Return value",
    "布尔值": "Boolean value",
    "表示函数是否成功执行": "Indicates whether the function is executed successfully",
    "文件路径列表": "List of file paths",
    "里面包含以指定类型为后缀名的所有文件的绝对路径": "Contains the absolute paths of all files with the specified type as the suffix",
    "表示文件所在的文件夹路径": "Indicates the folder path where the file is located",
    "如果是网络上的文件": "If it is a file on the internet",
    "就是临时文件夹的路径": "it is the path of the temporary folder",
    "该函数详细注释已添加": "Detailed comments for this function have been added",
    "请确认是否满足您的需要": "Please confirm if it meets your needs",
    "读取Latex文件": "Read Latex file",
    "删除其中的所有注释": "Remove all comments from it",
    "定义注释的正则表达式": "Define the regular expression of comments",
    "使用正则表达式查找注释": "Use regular expressions to find comments",
    "并替换为空字符串": "And replace them with an empty string",
    "记录删除注释后的文本": "Record the text after removing comments",
    "拆分过长的latex文件": "Split long latex files",
    "抽取摘要": "Extract abstract",
    "单线": "Single line",
    "获取文章meta信息": "Get article meta information",
    "多线程润色开始": "Multithreading polishing begins",
    "并行任务数量限制": "Parallel task number limit",
    "最多同时执行5个": "Up to 5 can be executed at the same time",
    "其他的排队等待": "Others are queued and waiting",
    "整理结果": "Organize the results",
    "基本信息": "Basic information",
    "功能、贡献者": "Function, contributor",
    "尝试导入依赖": "Attempt to import dependencies",
    "如果缺少依赖": "If dependencies are missing",
    "则给出安装建议": "Give installation suggestions",
    "清空历史": "Clear history",
    "以免输入溢出": "To avoid input overflow",
    "将长文本分离开来": "Separate long text",
    "以下是一篇学术论文中的一段内容": "The following is a paragraph from an academic paper",
    "请将此部分润色以满足学术标准": "Please polish this section to meet academic standards",
    "提高语法、清晰度和整体可读性": "Improve grammar, clarity, and overall readability",
    "不要修改任何LaTeX命令": "Do not modify any LaTeX commands",
    "例如\\section": "such as \\section",
    "\\cite和方程式": "\\cite and equations",
    "润色": "Polishing",
    "你是一位专业的中文学术论文作家": "You are a professional Chinese academic paper writer",
    "完成了吗": "Are you done?",
    "函数插件功能": "Function plugin feature",
    "对整个Latex项目进行润色": "Polish the entire Latex project",
    "函数插件贡献者": "Function plugin contributor",
    "解析项目": "Parsing project",
    "导入软件依赖失败": "Failed to import software dependencies",
    "使用该模块需要额外依赖": "Using this module requires additional dependencies",
    "安装方法": "Installation method",
    "空空如也的输入栏": "Empty input field",
    "找不到本地项目或无权访问": "Cannot find local project or do not have access",
    "找不到任何.tex文件": "Cannot find any .tex files",
    "OpenAI所允许的最大并行过载": "Maximum parallel overload allowed by OpenAI",
    "翻译": "Translation",
    "对整个Latex项目进行翻译": "Translate the entire Latex project",
    "提取摘要": "Extract abstract",
    "下载PDF文档": "Download PDF document",
    "翻译摘要等": "Translate abstract, etc.",
    "写入文件": "Writing to file",
    "重置文件的创建时间": "Resetting file creation time",
    "下载编号": "Download number",
    "自动定位": "Auto-locating",
    "不能识别的URL！": "Unrecognized URL!",
    "下载中": "Downloading",
    "下载完成": "Download complete",
    "正在获取文献名！": "Getting article name!",
    "年份获取失败": "Failed to get year",
    "authors获取失败": "Failed to get authors",
    "获取成功": "Successfully retrieved",
    "函数插件作者": "Function plugin author",
    "正在提取摘要并下载PDF文档……": "Extracting abstract and downloading PDF document...",
    "下载pdf文件未成功": "PDF file download unsuccessful",
    "请你阅读以下学术论文相关的材料": "Please read the following academic paper related materials",
    "翻译为中文": "Translate to Chinese",
    "材料如下": "Materials are as follows",
    "论文": "Paper",
    "PDF文件也已经下载": "PDF file has also been downloaded",
    "剩下的情况都开头除去": "Remove the beginning of the remaining situation",
    "结尾除去一次": "Remove the end once",
    "第1步": "Step 1",
    "第2步": "Step 2",
    "第3步": "Step 3",
    "集合文件": "Collection file",
    "第4步": "Step 4",
    "随便显示点什么防止卡顿的感觉": "Display something randomly to prevent lagging",
    "第5步": "Step 5",
    "Token限制下的截断与处理": "Truncation and processing under Token restriction",
    "第6步": "Step 6",
    "任务函数": "Task function",
    "分解代码文件": "Decompose code files",
    "第7步": "Step 7",
    "所有线程同时开始执行任务函数": "All threads start executing task functions simultaneously",
    "第8步": "Step 8",
    "循环轮询各个线程是否执行完毕": "Loop and poll whether each thread has finished executing",
    "第9步": "Step 9",
    "把结果写入文件": "Write the results to a file",
    "这里其实不需要join了": "Join is not needed here",
    "肯定已经都结束了": "They must have all finished",
    "失败": "Failure",
    "第10步": "Step 10",
    "备份一个文件": "Backup a file",
    "接下来请将以下代码中包含的所有中文转化为英文": "Please translate all Chinese in the following code into English",
    "只输出转化后的英文代码": "Output only the translated English code",
    "请用代码块输出代码": "Please output the code using code blocks",
    "等待多线程操作": "Waiting for multi-threaded operations",
    "中间过程不予显示": "Intermediate processes will not be displayed",
    "聊天显示框的句柄": "Chat display box handle",
    "用于显示给用户": "Displayed to the user",
    "聊天历史": "Chat history",
    "前情提要": "Context summary",
    "给gpt的静默提醒": "Silent reminder to GPT",
    "当前软件运行的端口号": "Current software running port number",
    "这是什么功能": "What is this function",
    "生成图像": "Generate image",
    "请先把模型切换至gpt-xxxx或者api2d-xxxx": "Please switch the model to gpt-xxxx or api2d-xxxx first",
    "如果中文效果不理想": "If the Chinese effect is not ideal",
    "尝试Prompt": "Try Prompt",
    "正在处理中": "Processing",
    "图像中转网址": "Image transfer URL",
    "中转网址预览": "Transfer URL preview",
    "本地文件地址": "Local file address",
    "本地文件预览": "Local file preview",
    "chatGPT对话历史": "ChatGPT conversation history",
    "对话历史": "Conversation history",
    "对话历史写入": "Conversation history written",
    "存档文件详情": "Archive file details",
    "载入对话": "Load conversation",
    "条": "条",
    "上下文": "Context",
    "保存当前对话": "Save current conversation",
    "您可以调用“LoadConversationHistoryArchive”还原当下的对话": "You can call 'LoadConversationHistoryArchive' to restore the current conversation",
    "警告！被保存的对话历史可以被使用该系统的任何人查阅": "Warning! The saved conversation history can be viewed by anyone using this system",
    "gpt_log/**/chatGPT对话历史*.html": "gpt_log/**/chatGPT conversation history *.html",
    "正在查找对话历史文件": "Looking for conversation history file",
    "html格式": "HTML format",
    "找不到任何html文件": "No HTML files found",
    "但本地存储了以下历史文件": "But the following history files are stored locally",
    "您可以将任意一个文件路径粘贴到输入区": "You can paste any file path into the input area",
    "然后重试": "and try again",
    "载入对话历史文件": "Load conversation history file",
    "对话历史文件损坏！": "Conversation history file is corrupted!",
    "删除所有历史对话文件": "Delete all history conversation files",
    "已删除": "Deleted",
    "pip install python-docx 用于docx格式": "pip install python-docx for docx format",
    "跨平台": "Cross-platform",
    "pip install pywin32 用于doc格式": "pip install pywin32 for doc format",
    "仅支持Win平台": "Only supports Win platform",
    "打开文件": "Open file",
    "private_upload里面的文件名在解压zip后容易出现乱码": "The file name in private_upload is prone to garbled characters after unzipping",
    "rar和7z格式正常": "RAR and 7z formats are normal",
    "故可以只分析文章内容": "So you can only analyze the content of the article",
    "不输入文件名": "Do not enter the file name",
    "已经对该文章的所有片段总结完毕": "All segments of the article have been summarized",
    "如果文章被切分了": "If the article is cut into pieces",
    "检测输入参数": "Checking input parameters",
    "如没有给定输入参数": "If no input parameters are given",
    "直接退出": "Exit directly",
    "搜索需要处理的文件清单": "Search for the list of files to be processed",
    "如果没找到任何文件": "If no files are found",
    "开始正式执行任务": "Start executing the task formally",
    "请对下面的文章片段用中文做概述": "Please summarize the following article fragment in Chinese",
    "文章内容是": "The content of the article is",
    "请对下面的文章片段做概述": "Please summarize the following article fragment",
    "的第": "The",
    "个片段": "fragment",
    "总结文章": "Summarize the article",
    "根据以上的对话": "According to the above dialogue",
    "的主要内容": "The main content of",
    "所有文件都总结完成了吗": "Are all files summarized?",
    "如果是.doc文件": "If it is a .doc file",
    "请先转化为.docx格式": "Please convert it to .docx format first",
    "找不到任何.docx或doc文件": "Cannot find any .docx or .doc files",
    "读取Markdown文件": "Read Markdown file",
    "拆分过长的Markdown文件": "Split overlong Markdown file",
    "什么都没有": "Nothing at all",
    "对整个Markdown项目进行翻译": "Translate the entire Markdown project",
    "找不到任何.md文件": "Cannot find any .md files",
    "句子结束标志": "End of sentence marker",
    "尽量是完整的一个section": "Try to use a complete section",
    "比如introduction": "such as introduction",
    "experiment等": "experiment, etc.",
    "必要时再进行切割": "cut if necessary",
    "的长度必须小于 2500 个 Token": "its length must be less than 2500 tokens",
    "尝试": "try",
    "按照章节切割PDF": "cut PDF by sections",
    "从摘要中提取高价值信息": "extract high-value information from the abstract",
    "放到history中": "put it in history",
    "迭代地历遍整个文章": "iterate through the entire article",
    "提取精炼信息": "extract concise information",
    "用户提示": "user prompt",
    "初始值是摘要": "initial value is the abstract",
    "i_say=真正给chatgpt的提问": "i_say=questions actually asked to chatgpt",
    "i_say_show_user=给用户看的提问": "i_say_show_user=questions shown to the user",
    "迭代上一次的结果": "iterate over the previous result",
    "提示": "prompt",
    "整理history": "organize history",
    "接下来两句话只显示在界面上": "the next two sentences are only displayed on the interface",
    "不起实际作用": "do not have an actual effect",
    "设置一个token上限": "set a token limit",
    "防止回答时Token溢出": "prevent token overflow when answering",
    "注意这里的历史记录被替代了": "note that the history record here has been replaced",
    "首先你在英文语境下通读整篇论文": "First, read the entire paper in an English context",
    "收到": "Received",
    "文章极长": "Article is too long",
    "不能达到预期效果": "Cannot achieve expected results",
    "接下来": "Next",
    "你是一名专业的学术教授": "You are a professional academic professor",
    "利用以上信息": "Utilize the above information",
    "使用中文回答我的问题": "Answer my questions in Chinese",
    "理解PDF论文内容": "Understand the content of a PDF paper",
    "并且将结合上下文内容": "And will combine with the context",
    "进行学术解答": "Provide academic answers",
    "请对下面的程序文件做一个概述": "Please provide an overview of the program file below",
    "并对文件中的所有函数生成注释": "And generate comments for all functions in the file",
    "使用markdown表格输出结果": "Output the results using markdown tables",
    "文件内容是": "The file content is",
    "在此处替换您要搜索的关键词": "Replace the keywords you want to search here",
    "爬取搜索引擎的结果": "Crawl the results of search engines",
    "依次访问网页": "Visit web pages in order",
    "最多收纳多少个网页的结果": "Include results from how many web pages at most",
    "ChatGPT综合": "ChatGPT synthesis",
    "裁剪输入": "Trim the input",
    "从最长的条目开始裁剪": "Start trimming from the longest entry",
    "防止爆token": "Prevent token explosion",
    "无法连接到该网页": "Cannot connect to the webpage",
    "请结合互联网信息回答以下问题": "Please answer the following questions based on internet information",
    "请注意": "Please note",
    "您正在调用一个": "You are calling a",
    "函数插件": "function plugin",
    "的模板": "template",
    "该模板可以实现ChatGPT联网信息综合": "This template can achieve ChatGPT network information integration",
    "该函数面向希望实现更多有趣功能的开发者": "This function is aimed at developers who want to implement more interesting features",
    "它可以作为创建新功能函数的模板": "It can be used as a template for creating new feature functions",
    "您若希望分享新的功能模组": "If you want to share new feature modules",
    "请不吝PR！": "Please don't hesitate to PR!",
    "第": "The",
    "份搜索结果": "search results",
    "从以上搜索结果中抽取信息": "Extract information from the above search results",
    "然后回答问题": "Then answer the question",
    "请从给定的若干条搜索结果中抽取信息": "Please extract information from the given search results",
    "对最相关的两个搜索结果进行总结": "Summarize the two most relevant search results",
    "拆分过长的IPynb文件": "Splitting overly long IPynb files",
    "的分析如下": "analysis is as follows",
    "解析的结果如下": "The parsing result is as follows",
    "对IPynb文件进行解析": "Parse the IPynb file",
    "找不到任何.ipynb文件": "Cannot find any .ipynb files",
    "第一步": "Step one",
    "逐个文件分析": "Analyze each file",
    "读取文件": "Read the file",
    "装载请求内容": "Load the request content",
    "文件读取完成": "File reading completed",
    "对每一个源代码文件": "For each source code file",
    "生成一个请求线程": "Generate a request thread",
    "发送到chatgpt进行分析": "Send to chatgpt for analysis",
    "全部文件解析完成": "All files parsed",
    "结果写入文件": "Write results to file",
    "准备对工程源代码进行汇总分析": "Prepare to summarize and analyze project source code",
    "第二步": "Step two",
    "综合": "Synthesis",
    "单线程": "Single thread",
    "分组+迭代处理": "Grouping + iterative processing",
    "10个文件为一组": "10 files per group",
    "只保留文件名节省token": "Keep only file names to save tokens",
    "裁剪input": "Trim input",
    "迭代之前的分析": "Analysis before iteration",
    "将要匹配的模式": "Pattern to match",
    "不输入即全部匹配": "Match all if not input",
    "将要忽略匹配的文件后缀": "File suffixes to ignore in matching",
    "避免解析压缩文件": "Avoid parsing compressed files",
    "将要忽略匹配的文件名": "File names to ignore in matching",
    "生成正则表达式": "Generate regular expression",
    "若上传压缩文件": "If uploading compressed files",
    "先寻找到解压的文件夹路径": "First find the path of the decompressed folder",
    "从而避免解析压缩文件": "Thus avoid parsing compressed files",
    "按输入的匹配模式寻找上传的非压缩文件和已解压的文件": "Find uncompressed and decompressed files uploaded according to the input matching pattern",
    "源文件太多": "Too many source files",
    "超过512个": "Exceeds 512",
    "请缩减输入文件的数量": "Please reduce the number of input files",
    "或者": "Or",
    "您也可以选择删除此行警告": "You can also choose to delete this line of warning",
    "并修改代码拆分file_manifest列表": "And modify the code to split the file_manifest list",
    "从而实现分批次处理": "To achieve batch processing",
    "接下来请你逐文件分析下面的工程": "Next, please analyze the following project file by file",
    "请对下面的程序文件做一个概述文件名是": "Please give an overview of the following program files, the file name is",
    "你是一个程序架构分析师": "You are a program architecture analyst",
    "正在分析一个源代码项目": "Analyzing a source code project",
    "你的回答必须简单明了": "Your answer must be concise and clear",
    "完成": "Completed",
    "逐个文件分析已完成": "Analysis of each file has been completed",
    "正在开始汇总": "Starting to summarize",
    "用一张Markdown表格简要描述以下文件的功能": "Briefly describe the functions of the following files in a Markdown table",
    "根据以上分析": "Based on the above analysis",
    "用一句话概括程序的整体功能": "Summarize the overall function of the program in one sentence",
    "对程序的整体功能和构架重新做出概括": "Redescribe the overall function and architecture of the program",
    "由于输入长度限制": "Due to input length limitations",
    "可能需要分组处理": "Group processing may be required",
    "本组文件为": "This group of files is",
    "+ 已经汇总的文件组": "+ Files group already summarized",
    "正在分析一个项目的源代码": "Analyzing source code of a project",
    "找不到任何python文件": "No Python files found",
    "找不到任何.h头文件": "No .h header files found",
    "找不到任何java文件": "No Java files found",
    "找不到任何前端相关文件": "No front-end related files found",
    "找不到任何golang文件": "No Golang files found",
    "找不到任何lua文件": "No Lua files found",
    "找不到任何CSharp文件": "No CSharp files found",
    "找不到任何文件": "No files found",
    "正在同时咨询ChatGPT和ChatGLM……": "Consulting ChatGPT and ChatGLM simultaneously...",
    "发送 GET 请求": "Sending GET request",
    "解析网页内容": "Parsing webpage content",
    "获取所有文章的标题和作者": "Getting titles and authors of all articles",
    "引用次数是链接中的文本": "The number of citations is in the link text",
    "直接取出来": "Take it out directly",
    "摘要在 .gs_rs 中的文本": "The summary is in the .gs_rs text",
    "需要清除首尾空格": "Need to remove leading and trailing spaces",
    "是否在arxiv中": "Is it in arxiv?",
    "不在arxiv中无法获取完整摘要": "Cannot get complete summary if it is not in arxiv",
    "分析用户提供的谷歌学术": "Analyzing Google Scholar provided by the user",
    "搜索页面中": "In the search page",
    "出现的所有文章": "All articles that appear",
    "插件初始化中": "Plugin initializing",
    "下面是一些学术文献的数据": "Below are some academic literature data",
    "当你想发送一张照片时": "When you want to send a photo",
    "使用 Unsplash API": "Use Unsplash API",
    "匹配^数字^": "Match ^number^",
    "将匹配到的数字作为替换值": "Replace the matched number as the replacement value",
    "替换操作": "Replacement operation",
    "质能方程式": "Mass-energy equivalence equation",
    "知乎": "Zhihu",
    "你好": "Hello",
    "这是必应": "This is Bing",
    "质能方程是描述质量与能量之间的当量关系的方程": "The mass-energy equivalence equation describes the equivalent relationship between mass and energy",
    "用tex格式": "In tex format",
    "质能方程可以写成$$E=mc^2$$": "The mass-energy equivalence equation can be written as $$E=mc^2$$",
    "其中$E$是能量": "Where $E$ is energy",
    "$m$是质量": "$m$ is mass",
    "$c$是光速": "$c$ is the speed of light",
    "Endpoint 重定向": "Endpoint redirection",
    "兼容旧版的配置": "Compatible with old version configuration",
    "新版配置": "New version configuration",
    "获取tokenizer": "Get tokenizer",
    "如果只询问1个大语言模型": "If only one large language model is queried",
    "如果同时InquiryMultipleLargeLanguageModels": "If InquiryMultipleLargeLanguageModels is queried at the same time",
    "观察窗": "Observation window",
    "该文件中主要包含2个函数": "There are mainly 2 functions in this file",
    "是所有LLM的通用接口": "It is a common interface for all LLMs",
    "它们会继续向下调用更底层的LLM模型": "They will continue to call lower-level LLM models",
    "处理多模型并行等细节": "Handling details such as multi-model parallelism",
    "不具备多线程能力的函数": "Functions without multi-threading capability",
    "正常对话时使用": "Used in normal conversation",
    "具备完备的交互功能": "Fully interactive",
    "不可多线程": "Not multi-threaded",
    "具备多线程调用能力的函数": "Functions with multi-threading capability",
    "在函数插件中被调用": "Called in function plugins",
    "灵活而简洁": "Flexible and concise",
    "正在加载tokenizer": "Loading tokenizer",
    "如果是第一次运行": "If it is the first time running",
    "可能需要一点时间下载参数": "It may take some time to download parameters",
    "加载tokenizer完毕": "Loading tokenizer completed",
    "警告！API_URL配置选项将被弃用": "Warning! The API_URL configuration option will be deprecated",
    "请更换为API_URL_REDIRECT配置": "Please replace it with the API_URL_REDIRECT configuration",
    "将错误显示出来": "Display errors",
    "发送至LLM": "Send to LLM",
    "等待回复": "Waiting for reply",
    "一次性完成": "Completed in one go",
    "不显示中间过程": "Do not display intermediate processes",
    "但内部用stream的方法避免中途网线被掐": "But internally use the stream method to avoid the network being cut off midway",
    "是本次问询的输入": "This is the input of this inquiry",
    "系统静默prompt": "System silent prompt",
    "LLM的内部调优参数": "LLM's internal tuning parameters",
    "是之前的对话列表": "history is the list of previous conversations",
    "用于负责跨越线程传递已经输出的部分": "Used to transfer the already output part across threads",
    "大部分时候仅仅为了fancy的视觉效果": "Most of the time it's just for fancy visual effects",
    "留空即可": "Leave it blank",
    "观测窗": "Observation window",
    "TGUI不支持函数插件的实现": "TGUI does not support the implementation of function plugins",
    "说": "Say",
    "流式获取输出": "Get output in a streaming way",
    "用于基础的对话功能": "Used for basic conversation functions",
    "inputs 是本次问询的输入": "inputs are the inputs for this inquiry",
    "temperature是LLM的内部调优参数": "Temperature is an internal tuning parameter of LLM",
    "history 是之前的对话列表": "history is the list of previous conversations",
    "注意无论是inputs还是history": "Note that both inputs and history",
    "内容太长了都会触发token数量溢出的错误": "An error of token overflow will be triggered if the content is too long",
    "chatbot 为WebUI中显示的对话列表": "chatbot is the conversation list displayed in WebUI",
    "修改它": "Modify it",
    "然后yeild出去": "Then yield it out",
    "可以直接修改对话界面内容": "You can directly modify the conversation interface content",
    "additional_fn代表点击的哪个按钮": "additional_fn represents which button is clicked",
    "按钮见functional.py": "See functional.py for buttons",
    "子进程执行": "Subprocess execution",
    "第一次运行": "First run",
    "加载参数": "Load parameters",
    "进入任务等待状态": "Enter task waiting state",
    "收到消息": "Received message",
    "开始请求": "Start requesting",
    "中途接收可能的终止指令": "Receive possible termination command in the middle",
    "如果有的话": "If any",
    "请求处理结束": "Request processing ends",
    "开始下一个循环": "Start the next loop",
    "主进程执行": "Main process execution",
    "chatglm 没有 sys_prompt 接口": "ChatGLM has no sys_prompt interface",
    "因此把prompt加入 history": "Therefore, add prompt to history",
    "的耐心": "Patience",
    "设置5秒即可": "Set 5 seconds",
    "热更新prompt": "Hot update prompt",
    "获取预处理函数": "Get preprocessing function",
    "处理历史信息": "Process historical information",
    "开始接收chatglm的回复": "Start receiving replies from ChatGLM",
    "总结输出": "Summary output",
    "ChatGLM尚未加载": "ChatGLM has not been loaded",
    "加载需要一段时间": "Loading takes some time",
    "取决于": "Depending on",
    "的配置": "Configuration",
    "ChatGLM消耗大量的内存": "ChatGLM consumes a lot of memory",
    "或显存": "Or video memory",
    "也许会导致低配计算机卡死 ……": "May cause low-end computers to freeze...",
    "依赖检测通过": "Dependency check passed",
    "缺少ChatGLM的依赖": "Missing dependency for ChatGLM",
    "如果要使用ChatGLM": "If you want to use ChatGLM",
    "除了基础的pip依赖以外": "In addition to the basic pip dependencies",
    "您还需要运行": "You also need to run",
    "安装ChatGLM的依赖": "Install dependencies for ChatGLM",
    "Call ChatGLM fail 不能正常加载ChatGLM的参数": "Call ChatGLM fail, unable to load parameters for ChatGLM",
    "不能正常加载ChatGLM的参数！": "Unable to load parameters for ChatGLM!",
    "多线程方法": "Multithreading method",
    "函数的说明请见 request_llm/bridge_all.py": "For function details, please see request_llm/bridge_all.py",
    "程序终止": "Program terminated",
    "单线程方法": "Single-threaded method",
    "等待ChatGLM响应中": "Waiting for response from ChatGLM",
    "ChatGLM响应异常": "ChatGLM response exception",
    "借鉴了 https": "Referenced from https",
    "config_private.py放自己的秘密如API和代理网址": "Put your own secrets such as API and proxy address in config_private.py",
    "读取时首先看是否存在私密的config_private配置文件": "When reading, first check if there is a private config_private configuration file",
    "不受git管控": "Not controlled by git",
    "则覆盖原config文件": "Then overwrite the original config file",
    "看门狗的耐心": "The patience of the watchdog",
    "失败了": "Failed",
    "重试一次": "Retry once",
    "再失败就没办法了": "If it fails again, there is no way",
    "api2d 正常完成": "api2d completed normally",
    "把已经获取的数据显示出去": "Display the data already obtained",
    "如果超过期限没有喂狗": "If the dog is not fed beyond the deadline",
    "则终止": "then terminate",
    "非OpenAI官方接口的出现这样的报错": "such errors occur in non-OpenAI official interfaces",
    "OpenAI和API2D不会走这里": "OpenAI and API2D will not go here",
    "数据流的第一帧不携带content": "The first frame of the data stream does not carry content",
    "前者API2D的": "The former is API2D",
    "判定为数据流的结束": "Judged as the end of the data stream",
    "gpt_replying_buffer也写完了": "gpt_replying_buffer is also written",
    "处理数据流的主体": "Processing the body of the data stream",
    "如果这里抛出异常": "If an exception is thrown here",
    "一般是文本过长": "It is usually because the text is too long",
    "详情见get_full_error的输出": "See the output of get_full_error for details",
    "清除当前溢出的输入": "Clear the current overflow input",
    "是本次输入": "It is the input of this time",
    "是本次输出": "It is the output of this time",
    "history至少释放二分之一": "Release at least half of the history",
    "清除历史": "Clear the history",
    "该文件中主要包含三个函数": "This file mainly contains three functions",
    "高级实验性功能模块调用": "Calling advanced experimental function modules",
    "不会实时显示在界面上": "Will not be displayed on the interface in real time",
    "参数简单": "The parameters are simple",
    "可以多线程并行": "Can be multi-threaded and parallel",
    "方便实现复杂的功能逻辑": "Convenient for implementing complex functional logic",
    "在实验过程中发现调用predict_no_ui处理长文档时": "It was found during the experiment that when calling predict_no_ui to process long documents,",
    "和openai的连接容易断掉": "Connection to OpenAI is prone to disconnection",
    "这个函数用stream的方式解决这个问题": "This function solves the problem using stream",
    "同样支持多线程": "Also supports multi-threading",
    "网络错误": "Network error",
    "检查代理服务器是否可用": "Check if the proxy server is available",
    "以及代理设置的格式是否正确": "And if the format of the proxy settings is correct",
    "格式须是": "The format must be",
    "缺一不可": "All parts are necessary",
    "获取完整的从Openai返回的报错": "Get the complete error message returned from OpenAI",
    "发送至chatGPT": "Send to chatGPT",
    "chatGPT的内部调优参数": "Internal tuning parameters of chatGPT",
    "请求超时": "Request timed out",
    "正在重试": "Retrying",
    "OpenAI拒绝了请求": "OpenAI rejected the request",
    "用户取消了程序": "User canceled the program",
    "意外Json结构": "Unexpected JSON structure",
    "正常结束": "Normal termination",
    "但显示Token不足": "But shows insufficient token",
    "导致输出不完整": "Resulting in incomplete output",
    "请削减单次输入的文本量": "Please reduce the amount of text input per request",
    "temperature是chatGPT的内部调优参数": "Temperature is an internal tuning parameter of chatGPT",
    "输入已识别为openai的api_key": "The input has been recognized as OpenAI's api_key",
    "api_key已导入": "api_key has been imported",
    "缺少api_key": "Missing api_key",
    "MOSS尚未加载": "MOSS has not been loaded yet",
    "MOSS消耗大量的内存": "MOSS consumes a lot of memory",
    "缺少MOSS的依赖": "Lack of dependencies for MOSS",
    "如果要使用MOSS": "If you want to use MOSS",
    "安装MOSS的依赖": "Install dependencies for MOSS",
    "Call MOSS fail 不能正常加载MOSS的参数": "Call MOSS fail, unable to load MOSS parameters normally",
    "不能正常加载MOSS的参数！": "Unable to load MOSS parameters normally!",
    "等待MOSS响应中": "Waiting for MOSS response",
    "MOSS响应异常": "MOSS response exception",
    "读取配置": "Read configuration",
    "等待": "Waiting",
    "开始问问题": "Start asking questions",
    "追加历史": "Append history",
    "问题": "Question",
    "代理设置": "Proxy settings",
    "发送请求到子进程": "Send request to child process",
    "等待newbing回复的片段": "Waiting for the fragment of newbing reply",
    "结束": "End",
    "newbing回复的片段": "Fragment of newbing reply",
    "没有 sys_prompt 接口": "No sys_prompt interface",
    "来自EdgeGPT.py": "From EdgeGPT.py",
    "等待NewBing响应": "Waiting for NewBing response",
    "子进程Worker": "Child process Worker",
    "调用主体": "Call subject",
    "注意目前不能多人同时调用NewBing接口": "Note that currently multiple people cannot call the NewBing interface at the same time",
    "有线程锁": "There is a thread lock",
    "否则将导致每个人的NewBing问询历史互相渗透": "Otherwise, each person's NewBing inquiry history will penetrate each other",
    "调用NewBing时": "When calling NewBing",
    "会自动使用已配置的代理": "the configured proxy will be automatically used",
    "缺少的依赖": "Missing dependencies",
    "如果要使用Newbing": "If you want to use Newbing",
    "安装Newbing的依赖": "Install the dependencies for Newbing",
    "这个函数运行在子进程": "This function runs in a child process",
    "不能加载Newbing组件": "Cannot load Newbing components",
    "NEWBING_COOKIES未填写或有格式错误": "NEWBING_COOKIES is not filled in or has a format error",
    "Newbing失败": "Newbing failed",
    "这个函数运行在主进程": "This function runs in the main process",
    "第三部分": "Part III",
    "主进程统一调用函数接口": "The main process calls the function interface uniformly",
    "等待NewBing响应中": "Waiting for NewBing response",
    "NewBing响应缓慢": "NewBing response is slow",
    "尚未完成全部响应": "Not all responses have been completed yet",
    "请耐心完成后再提交新问题": "Please be patient and submit a new question after completing all responses",
    "NewBing响应异常": "NewBing response is abnormal",
    "请刷新界面重试": "Please refresh the page and try again",
    "完成全部响应": "All responses have been completed",
    "请提交新问题": "Please submit a new question",
    "LLM_MODEL 格式不正确！": "LLM_MODEL format is incorrect!",
    "对各个llm模型进行单元测试": "Unit testing for each LLM model",
    "如何理解传奇?": "How to understand legends?",
    "设定一个最小段落长度阈值": "Set a minimum paragraph length threshold",
    "对文本进行归一化处理": "Normalize the text",
    "分解连字": "Break ligatures",
    "替换其他特殊字符": "Replace other special characters",
    "替换跨行的连词": "Replace hyphens across lines",
    "根据前后相邻字符的特点": "Based on the characteristics of adjacent characters",
    "找到原文本中的换行符": "Find line breaks in the original text",
    "根据 heuristic 规则": "Based on heuristic rules",
    "用空格或段落分隔符替换原换行符": "Replace line breaks with spaces or paragraph separators",
    "带超时倒计时": "With timeout countdown",
    "根据给定的匹配结果来判断换行符是否表示段落分隔": "Determine whether line breaks indicate paragraph breaks based on given matching results",
    "如果换行符前为句子结束标志": "If the line break is preceded by a sentence-ending punctuation mark",
    "句号": "period",
    "感叹号": "exclamation mark",
    "问号": "question mark",
    "且下一个字符为大写字母": "and the next character is a capital letter",
    "则换行符更有可能表示段落分隔": "the line break is more likely to indicate a paragraph break",
    "也可以根据之前的内容长度来判断段落是否已经足够长": "Paragraph length can also be judged based on previous content length",
    "通过把连字": "By converting ligatures and other text special characters to their basic forms",
    "等文本特殊符号转换为其基本形式来对文本进行归一化处理": "normalize the text by converting special characters to their basic forms",
    "对从 PDF 提取出的原始文本进行清洗和格式化处理": "Clean and format the raw text extracted from PDF",
    "1. 对原始文本进行归一化处理": "1. Normalize the original text",
    "2. 替换跨行的连词": "2. Replace hyphens across lines",
    "3. 根据 heuristic 规则判断换行符是否是段落分隔": "3. Determine whether line breaks indicate paragraph breaks based on heuristic rules",
    "并相应地进行替换": "And replace accordingly",
    "接下来请你逐文件分析下面的论文文件": "Next, please analyze the following paper files one by one",
    "概括其内容": "Summarize its content",
    "请对下面的文章片段用中文做一个概述": "Please summarize the following article in Chinese",
    "请对下面的文章片段做一个概述": "Please summarize the following article",
    "根据以上你自己的分析": "According to your own analysis above",
    "对全文进行概括": "Summarize the entire text",
    "用学术性语言写一段中文摘要": "Write a Chinese abstract in academic language",
    "然后再写一段英文摘要": "Then write an English abstract",
    "包括": "Including",
    "找不到任何.tex或.pdf文件": "Cannot find any .tex or .pdf files",
    "读取pdf文件": "Read the pdf file",
    "返回文本内容": "Return the text content",
    "此版本使用pdfminer插件": "This version uses the pdfminer plugin",
    "带token约简功能": "With token reduction function",
    "递归地切割PDF文件": "Recursively split the PDF file",
    "为了更好的效果": "For better results",
    "我们剥离Introduction之后的部分": "We strip the part after Introduction",
    "如果有": "If there is",
    "多线": "Multi-threaded",
    "\\n 翻译": "\\n Translation",
    "整理报告的格式": "Organize the format of the report",
    "原文": "Original text",
    "更新UI": "Update UI",
    "准备文件的下载": "Prepare for file download",
    "重命名文件": "Rename file",
    "以下是一篇学术论文的基础信息": "The following is the basic information of an academic paper",
    "请从中提取出“标题”、“收录会议或期刊”、“作者”、“摘要”、“编号”、“作者邮箱”这六个部分": "Please extract the following six parts: \"Title\", \"Conference or Journal\", \"Author\", \"Abstract\", \"Number\", \"Author's Email\"",
    "请用markdown格式输出": "Please output in markdown format",
    "最后用中文翻译摘要部分": "Finally, translate the abstract into Chinese",
    "请提取": "Please extract",
    "请从": "Please extract from",
    "中提取出“标题”、“收录会议或期刊”等基本信息": "Please extract basic information such as \"Title\" and \"Conference or Journal\" from",
    "你需要翻译以下内容": "You need to translate the following content",
    "请你作为一个学术翻译": "As an academic translator, please",
    "负责把学术论文准确翻译成中文": "be responsible for accurately translating academic papers into Chinese",
    "注意文章中的每一句话都要翻译": "Please translate every sentence in the article",
    "一、论文概况": "I. Overview of the paper",
    "二、论文翻译": "II. Translation of the paper",
    "/gpt_log/总结论文-": "/gpt_log/Summary of the paper-",
    "给出输出文件清单": "Provide a list of output files",
    "第 0 步": "Step 0",
    "切割PDF": "Split PDF",
    "每一块": "Each block",
    "提取出以下内容": "Extract the following content",
    "1、英文题目；2、中文题目翻译；3、作者；4、arxiv公开": "1. English title; 2. Translation of Chinese title; 3. Author; 4. arxiv open access",
    "；4、引用数量": "Number of Citations",
    "；5、中文摘要翻译": "Translation of Chinese Abstract",
    "以下是信息源": "Here are the Information Sources",
    "请分析此页面中出现的所有文章": "Please Analyze all the Articles Appearing on this Page",
    "这是第": "This is Batch Number",
    "批": "",
    "你是一个学术翻译": "You are an Academic Translator",
    "请从数据中提取信息": "Please Extract Information from the Data",
    "你必须使用Markdown表格": "You Must Use Markdown Tables",
    "你必须逐个文献进行处理": "You Must Process Each Document One by One",
    "状态": "Status",
    "已经全部完成": "All Completed",
    "您可以试试让AI写一个Related Works": "You Can Try to Let AI Write a Related Works",
    "该函数只有20多行代码": "This Function Has Only 20+ Lines of Code",
    "此外我们也提供可同步处理大量文件的多线程Demo供您参考": "In addition, we also provide a multi-threaded demo that can process a large number of files synchronously for your reference",
    "历史中哪些事件发生在": "Which Events Happened in History on",
    "月": "Month",
    "日": "Day",
    "列举两条并发送相关图片": "List Two and Send Relevant Pictures",
    "发送图片时": "When Sending Pictures",
    "请使用Markdown": "Please Use Markdown",
    "将Unsplash API中的PUT_YOUR_QUERY_HERE替换成描述该事件的一个最重要的单词": "Replace PUT_YOUR_QUERY_HERE in the Unsplash API with the Most Important Word Describing the Event",
    "1. 临时解决方案": "1. Temporary Solution",
    "直接在输入区键入api_key": "Enter the api_key Directly in the Input Area",
    "然后回车提交": "Submit after pressing Enter",
    "2. 长效解决方案": "Long-term solution",
    "在config.py中配置": "Configure in config.py",
    "等待响应": "Waiting for response",
    "api-key不满足要求": "API key does not meet requirements",
    "远程返回错误": "Remote returns error",
    "Json解析不合常规": "Json parsing is not normal",
    "Reduce the length. 本次输入过长": "Reduce the length. The input is too long this time",
    "或历史数据过长. 历史缓存数据已部分释放": "Or the historical data is too long. Historical cached data has been partially released",
    "您可以请再次尝试.": "You can try again.",
    "若再次失败则更可能是因为输入过长.": "If it fails again, it is more likely due to input being too long.",
    "does not exist. 模型不存在": "Model does not exist",
    "或者您没有获得体验资格": "Or you do not have the qualification for experience",
    "Incorrect API key. OpenAI以提供了不正确的API_KEY为由": "Incorrect API key. OpenAI claims that an incorrect API_KEY was provided",
    "拒绝服务": "Service refused",
    "You exceeded your current quota. OpenAI以账户额度不足为由": "You exceeded your current quota. OpenAI claims that the account balance is insufficient",
    "Bad forward key. API2D账户额度不足": "Bad forward key. API2D account balance is insufficient",
    "Not enough point. API2D账户点数不足": "Not enough point. API2D account points are insufficient",
    "Json异常": "Json exception",
    "整合所有信息": "Integrate all information",
    "选择LLM模型": "Select LLM model",
    "生成http请求": "Generate http request",
    "为发送请求做准备": "Prepare to send request",
    "你提供了错误的API_KEY": "You provided an incorrect API_KEY",
    "来保留函数的元信息": "Preserve the metadata of the function",
    "并定义了一个名为decorated的内部函数": "and define an inner function named decorated",
    "内部函数通过使用importlib模块的reload函数和inspect模块的getmodule函数来重新加载并获取函数模块": "The inner function reloads and retrieves the function module by using the reload function of the importlib module and the getmodule function of the inspect module",
    "然后通过getattr函数获取函数名": "Then it retrieves the function name using the getattr function",
    "并在新模块中重新加载函数": "and reloads the function in the new module",
    "最后": "Finally",
    "使用yield from语句返回重新加载过的函数": "it returns the reloaded function using the yield from statement",
    "并在被装饰的函数上执行": "and executes it on the decorated function",
    "最终": "Ultimately",
    "装饰器函数返回内部函数": "the decorator function returns the inner function",
    "这个内部函数可以将函数的原始定义更新为最新版本": "which can update the original definition of the function to the latest version",
    "并执行函数的新版本": "and execute the new version of the function",
    "第二部分": "Second part",
    "其他小工具": "Other utilities",
    "将结果写入markdown文件中": "Write the results to a markdown file",
    "将普通文本转换为Markdown格式的文本": "Convert plain text to Markdown formatted text",
    "向chatbot中添加简单的意外错误信息": "Add simple unexpected error messages to the chatbot",
    "Openai 限制免费用户每分钟20次请求": "Openai limits free users to 20 requests per minute",
    "降低请求频率中": "Reduce the request frequency",
    "只输出代码": "Output only the code",
    "文件名是": "The file name is",
    "文件代码是": "The file code is",
    "至少一个线程任务Token溢出而失败": "At least one thread task fails due to token overflow",
    "至少一个线程任务意外失败": "At least one thread task fails unexpectedly",
    "开始了吗": "Has it started?",
    "已完成": "Completed",
    "的转化": "conversion",
    "存入": "saved to",
    "生成一份任务执行报告": "Generate a task execution report",
    "文件保存到本地": "Save the file locally",
    "由于请求gpt需要一段时间": "As requesting GPT takes some time",
    "我们先及时地做一次界面更新": "Let's do a UI update in time",
    "界面更新": "UI update",
    "输入栏用户输入的文本": "Text entered by the user in the input field",
    "例如需要翻译的一段话": "For example, a paragraph that needs to be translated",
    "再例如一个包含了待处理文件的路径": "For example, a file path that contains files to be processed",
    "gpt模型参数": "GPT model parameters",
    "如温度和top_p等": "Such as temperature and top_p",
    "一般原样传递下去就行": "Generally pass it on as is",
    "插件模型的参数": "Plugin model parameters",
    "暂时没有用武之地": "No use for the time being",
    "找不到任何.tex或pdf文件": "Cannot find any .tex or .pdf files",
    "读取PDF文件": "Read PDF file",
    "输入中可能存在乱码": "There may be garbled characters in the input",
    "是否重置": "Whether to reset",
    "jittorllms 没有 sys_prompt 接口": "jittorllms does not have a sys_prompt interface",
    "开始接收jittorllms的回复": "Start receiving jittorllms responses",
    "jittorllms尚未加载": "jittorllms has not been loaded yet",
    "请避免混用多种jittor模型": "Please avoid mixing multiple jittor models",
    "否则可能导致显存溢出而造成卡顿": "Otherwise, it may cause a graphics memory overflow and cause stuttering",
    "jittorllms消耗大量的内存": "jittorllms consumes a lot of memory",
    "缺少jittorllms的依赖": "Missing dependencies for jittorllms",
    "如果要使用jittorllms": "If you want to use jittorllms",
    "和": "and",
    "两个指令来安装jittorllms的依赖": "Two commands to install jittorllms dependencies",
    "在项目根目录运行这两个指令": "Run these two commands in the project root directory",
    "安装jittorllms依赖后将完全破坏现有的pytorch环境": "Installing jittorllms dependencies will completely destroy the existing pytorch environment",
    "建议使用docker环境！": "It is recommended to use a docker environment!",
    "Call jittorllms fail 不能正常加载jittorllms的参数": "Call jittorllms fail, cannot load jittorllms parameters normally",
    "不能正常加载jittorllms的参数！": "Cannot load jittorllms parameters normally!",
    "触发重置": "Trigger reset",
    "等待jittorllms响应中": "Waiting for jittorllms response",
    "jittorllms响应异常": "Jittor LMS Response Exception",
    "这段代码来源 https": "This code is from https",
    "等待输入": "Waiting for input",
    "体验gpt-4可以试试api2d": "You can try API2d to experience GPT-4",
    "可选 ↓↓↓": "Optional ↓↓↓",
    "本地LLM模型如ChatGLM的执行方式 CPU/GPU": "Execution mode of local LLM models such as ChatGLM CPU/GPU",
    "设置gradio的并行线程数": "Set the number of parallel threads for Gradio",
    "不需要修改": "No modification is needed",
    "加一个live2d装饰": "Add a Live2D decoration",
    "HotReload的装饰器函数": "Decorator function of HotReload",
    "用于实现Python函数插件的热更新": "Used to implement hot updates of Python function plugins",
    "函数热更新是指在不停止程序运行的情况下": "Function hot update refers to updating function code in real-time without stopping program execution",
    "更新函数代码": "Update function code",
    "从而达到实时更新功能": "To achieve real-time update function",
    "在装饰器内部": "Inside the decorator",
    "使用wraps": "Use wraps",
    "代码高亮": "Code Highlighting",
    "网页的端口": "Web Port",
    "等待多久判定为超时": "Timeout Threshold",
    "-1代表随机端口": "-1 represents random port",
    "但大部分场合下并不需要修改": "However, it does not need to be modified in most cases",
    "发送请求到OpenAI后": "After sending the request to OpenAI",
    "上下布局": "Vertical Layout",
    "左右布局": "Horizontal Layout",
    "对话窗的高度": "Height of the Dialogue Window",
    "重试的次数限制": "Retry Limit",
    "gpt4现在只对申请成功的人开放": "GPT-4 is now only open to those who have successfully applied",
    "提高限制请查询": "Please check for higher limits",
    "OpenAI模型选择是": "OpenAI Model Selection is",
    "网络卡顿、代理失败、KEY失效": "Network Lag, Proxy Failure, KEY Invalid",
    "窗口布局": "Window Layout",
    "以下配置可以优化体验": "The following configurations can optimize the experience",
    "OpenAI绑了信用卡的用户可以填 16 或者更高": "Users who have bound their credit card to OpenAI can fill in 16 or higher",
    "如果OpenAI不响应": "If OpenAI does not respond"
}